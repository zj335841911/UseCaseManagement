<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.BranchMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="BranchResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`DELETED`, t1.`ID`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT` FROM `zt_branch` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="BranchResultMap" type="cn.ibizlab.pms.core.zentao.domain.Branch" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="product" column="product" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_BRANCH_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="BranchResultMap">
	select * from (
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
		 )t1
		 order by `order`  asc  
     </select>

    <!--数据集合[CurProduct]-->
	 <select id="searchCurProduct"  parameterType="cn.ibizlab.pms.core.zentao.filter.BranchSearchContext"  resultMap="BranchResultMap">
         select t1.* from (
                <include refid="CurProduct" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.BranchSearchContext"  resultMap="BranchResultMap">
	 	select * from (
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
		 )t1
		 order by `order`  asc  
     </select>

    <!--数据查询[CurProduct]-->
    <sql id="CurProduct" databaseId="mysql">
		<![CDATA[ select t1.* from (select '0' as `DELETED`,0 as `ID`,'所有平台' AS `NAME`, 0 as `order`, (case when #{srf.webcontext.product} is not null then #{srf.webcontext.product} else #{srf.webcontext.products} end  ) as product from dual union all SELECT t1.`DELETED`, t1.`ID`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT` FROM `zt_branch` t1) t1
					 WHERE 	t1.DELETED = '0'
						 AND ( ( t1.`PRODUCT` = #{srf.webcontext.product}  OR  t1.`PRODUCT` = #{srf.datacontext.product}  OR  t1.`PRODUCT` = #{srf.datacontext.products}  or t1.`product` is null) )
			]]>
    </sql>
    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`DELETED`, t1.`ID`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT` FROM `zt_branch` t1  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[DefaultBranch]-->
    <sql id="DefaultBranch" databaseId="mysql">
		<![CDATA[ SELECT '0' AS `DELETED`, 0 AS `ID`, '所有平台' AS`NAME`, 0 AS `ORDER`, t2.`id` AS `PRODUCT` FROM `zt_branch` t1 RIGHT JOIN `zt_product` t2 ON t1.product=t2.id WHERE ( ( t2.`ID` = #{srf.webcontext.product}  OR  t2.`ID` = #{srf.datacontext.product}  OR  t2.`ID` = #{srf.datacontext.products} ) )
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`DELETED`, t1.`ID`, t1.`NAME`, t1.`ORDER`, t1.`PRODUCT` FROM `zt_branch` t1  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>


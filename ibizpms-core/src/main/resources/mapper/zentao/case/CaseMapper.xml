<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.CaseMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="CaseResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t11.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t31.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t31.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRECONDITION`, t1.`PRI`, t1.`PRODUCT`, t41.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN `zt_testsuite` t11 ON t1.`LIB` = t11.`ID`  LEFT JOIN `zt_story` t21 ON t1.`STORY` = t21.`ID`  LEFT JOIN `zt_module` t31 ON t1.`MODULE` = t31.`ID`  LEFT JOIN `zt_product` t41 ON t1.`PRODUCT` = t41.`ID`  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="CaseResultMap" type="cn.ibizlab.pms.core.zentao.domain.Case" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="fromcaseid" column="fromcaseid" />
		<result property="branch" column="branch" />
		<result property="frombug" column="frombug" />
		<result property="story" column="story" />
		<result property="product" column="product" />
		<result property="lib" column="lib" />
		<result property="module" column="module" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztbranch" javaType="cn.ibizlab.pms.core.zentao.domain.Branch" column="branch" select="cn.ibizlab.pms.core.zentao.mapper.BranchMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztfrombug" javaType="cn.ibizlab.pms.core.zentao.domain.Bug" column="frombug" select="cn.ibizlab.pms.core.zentao.mapper.BugMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztfromcase" javaType="cn.ibizlab.pms.core.zentao.domain.Case" column="fromcaseid" select="cn.ibizlab.pms.core.zentao.mapper.CaseMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztmodule" javaType="cn.ibizlab.pms.core.zentao.domain.Module" column="module" select="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztstory" javaType="cn.ibizlab.pms.core.zentao.domain.Story" column="story" select="cn.ibizlab.pms.core.zentao.mapper.StoryMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="zttestsuite" javaType="cn.ibizlab.pms.core.zentao.domain.TestSuite" column="lib" select="cn.ibizlab.pms.core.zentao.mapper.TestSuiteMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_BRANCH_BRANCH] -->
	 <select id="selectByBranch" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  branch=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_BUG_FROMBUG] -->
	 <select id="selectByFrombug" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  frombug=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_CASE_FROMCAEID] -->
	 <select id="selectByFromcaseid" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  fromcaseid=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_MODULE_MODULE] -->
	 <select id="selectByModule" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  module=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_STORY_STORY] -->
	 <select id="selectByStory" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  story=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_CASE_ZT_TESTSUITE_LIB] -->
	 <select id="selectByLib" resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  lib=#{id}
     </select>

    <!--数据集合[BatchNew]-->
	 <select id="searchBatchNew"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="BatchNew" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[CurOpenedCase]-->
	 <select id="searchCurOpenedCase"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="CurOpenedCase" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[CurSuite]-->
	 <select id="searchCurSuite"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="CurSuite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[CurTestTask]-->
	 <select id="searchCurTestTask"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="CurTestTask" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ESBulk]-->
	 <select id="searchESBulk"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="ESBulk" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ModuleRePortCase]-->
	 <select id="searchModuleRePortCase"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="ModuleRePortCase" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ModuleRePortCaseEntry]-->
	 <select id="searchModuleRePortCaseEntry"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="ModuleRePortCaseEntry" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ModuleRePortCase_Project]-->
	 <select id="searchModuleRePortCase_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="ModuleRePortCase_Project" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[MyFavorites]-->
	 <select id="searchMyFavorites"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="MyFavorite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[NotCurTestSuite]-->
	 <select id="searchNotCurTestSuite"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="NotCurTestSuite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[NotCurTestTask]-->
	 <select id="searchNotCurTestTask"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="NotCurTestTask" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[NotCurTestTaskProject]-->
	 <select id="searchNotCurTestTaskProject"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="NotCurTestTaskProject" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RePortCase]-->
	 <select id="searchRePortCase"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RePortCase" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RePortCaseEntry]-->
	 <select id="searchRePortCaseEntry"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RePortCaseEntry" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RePortCase_Project]-->
	 <select id="searchRePortCase_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RePortCase_Project" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RunERRePortCase]-->
	 <select id="searchRunERRePortCase"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RunERRePortCase" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RunERRePortCaseEntry]-->
	 <select id="searchRunERRePortCaseEntry"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RunERRePortCaseEntry" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RunERRePortCase_Project]-->
	 <select id="searchRunERRePortCase_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RunERRePortCase_Project" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RunRePortCase]-->
	 <select id="searchRunRePortCase"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RunRePortCase" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RunRePortCaseEntry]-->
	 <select id="searchRunRePortCaseEntry"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RunRePortCaseEntry" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RunRePortCase_Project]-->
	 <select id="searchRunRePortCase_Project"  parameterType="cn.ibizlab.pms.core.zentao.filter.CaseSearchContext"  resultMap="CaseResultMap">
         select t1.* from (
                <include refid="RunRePortCase_Project" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[BatchNew]-->
    <sql id="BatchNew" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t11.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t31.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t31.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t41.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN `zt_testsuite` t11 ON t1.`LIB` = t11.`ID`  LEFT JOIN `zt_story` t21 ON t1.`STORY` = t21.`ID`  LEFT JOIN `zt_module` t31 ON t1.`MODULE` = t31.`ID`  LEFT JOIN `zt_product` t41 ON t1.`PRODUCT` = t41.`ID`  
					 WHERE 	t1.DELETED = '0'
						 AND ( 1<>1 )
			]]>
    </sql>
    <!--数据查询[CurOpenedCase]-->
    <sql id="CurOpenedCase" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t11.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t31.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t31.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t41.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN `zt_testsuite` t11 ON t1.`LIB` = t11.`ID`  LEFT JOIN `zt_story` t21 ON t1.`STORY` = t21.`ID`  LEFT JOIN `zt_module` t31 ON t1.`MODULE` = t31.`ID`  LEFT JOIN `zt_product` t41 ON t1.`PRODUCT` = t41.`ID`  
					 WHERE 	t1.DELETED = '0'
						 AND ( DATE_FORMAT( t1.openedDate, '%Y' ) = DATE_FORMAT(now(), '%Y' )  AND  t1.`OPENEDBY` =  #{srf.sessioncontext.srfloginname} )
			]]>
    </sql>
    <!--数据查询[CurSuite]-->
    <sql id="CurSuite" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t11.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t31.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t31.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t41.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN `zt_testsuite` t11 ON t1.`LIB` = t11.`ID`  LEFT JOIN `zt_story` t21 ON t1.`STORY` = t21.`ID`  LEFT JOIN `zt_module` t31 ON t1.`MODULE` = t31.`ID`  LEFT JOIN `zt_product` t41 ON t1.`PRODUCT` = t41.`ID`  
					 WHERE 	EXISTS(SELECT * FROM `zt_suitecase` t51   WHERE   t1.`ID` = t51.`CASE`  AND  ( t51.`SUITE` = #{srf.datacontext.srfparentkey} ) )
						 AND t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[CurTestTask]-->
    <sql id="CurTestTask" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'case' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t41.`LASTRUNDATE`, t41.`LASTRUNNER`, t41.`LASTRUNRESULT`, (case when (select count(1) from zt_testresult tt where tt.`case` = t1.id and tt.run = t41.id and tt.caseResult = 'fail') > 0 then 'fail' when t41.`LASTRUNRESULT` = '' or t41.`LASTRUNRESULT` is null then 'no' else t41.`LASTRUNRESULT` end) as  `LASTRUNRESULT1`, t1.`LIB`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, t1.`TYPE`, t41.task as task, t1.`VERSION`, t41.assignedTo as assignedTo, (case when t1.version > t41.version then 'casechange' else t41.`status` end) as `status1` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testrun t41 ON t1.id = t41.`case`
					 WHERE 	t41.`TASK` = #{srf.datacontext.srfparentkey}
						 AND t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'case' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[ESBulk]-->
    <sql id="ESBulk" databaseId="mysql">
		<![CDATA[ SELECT 	t1.id, 	t1.title, 	t1.precondition, 	t1.PRODUCT, 	t1.deleted FROM 	zt_case t1
			]]>
    </sql>
    <!--数据查询[ModuleRePortCase]-->
    <sql id="ModuleRePortCase" databaseId="mysql">
		<![CDATA[ SELECT  t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.LASTRUNDATE AS `LASTRUNDATE`, t1.`LASTRUNNER`, t1.LASTRUNRESULT AS `LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, 	CONCAT( 	'/',  case when	( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t11.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) is not null then ( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t11.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) when t11.`name` is null then '' else t11.`name` end 	) AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID LEFT JOIN zt_testrun t51 on t51.`case` = t1.id LEFT JOIN zt_testreport t61 on t51.task = t61.tasks
					 WHERE 	t1.DELETED = '0'
						 AND t61.id = #{srf.webcontext.srfparentkey}
			]]>
    </sql>
    <!--数据查询[ModuleRePortCaseEntry]-->
    <sql id="ModuleRePortCaseEntry" databaseId="mysql">
		<![CDATA[ select t1.lastRunResult1,t1.RESULTCNT as RESULTCNT, t1.PRODUCT,CONCAT(ROUND(t1.RESULTCNT / t1.sss * 100, 2),'','%') as TASK from( select t1.PRODUCT,t1.lastRunResult1,t1.resultcnt,(SELECT 	COUNT( 1 )  FROM 	zt_case ttt  LEFT JOIN zt_testrun t51 on t51.`case` = ttt.id LEFT JOIN zt_testreport t61 on t51.task = t61.tasks WHERE 	t61.id = #{srf.webcontext.srfparentkey} 	AND ttt.DELETED = '0' ) as sss from ( select t1.PRODUCT,t1.lastRunResult1,COUNT(t1.lastRunResult1) as RESULTCNT from ( SELECT  	CONCAT( 	'/',  case when	( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t11.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) is not null then ( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t11.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) when t11.`name` is null then '' else t11.`name` end 	) AS `lastRunResult1`, t1.`PRODUCT` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_testrun t51 on t51.`case` = t1.id LEFT JOIN zt_testreport t61 on t51.task = t61.tasks where t61.id = #{srf.webcontext.srfparentkey}  	AND t1.DELETED = '0' ) t1 GROUP BY t1.lastRunResult1 ) t1) t1
			]]>
    </sql>
    <!--数据查询[ModuleRePortCase_Project]-->
    <sql id="ModuleRePortCase_Project" databaseId="mysql">
		<![CDATA[ SELECT  t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.LASTRUNDATE AS `LASTRUNDATE`, t1.`LASTRUNNER`, t1.LASTRUNRESULT AS `LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, 	CONCAT( 	'/',  case when	( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t11.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) is not null then ( SELECT 	GROUP_CONCAT( tt.NAME SEPARATOR '/' )  FROM 	zt_module tt  WHERE 	FIND_IN_SET( tt.id, t11.path )  	AND tt.type = 'story'  GROUP BY 	tt.root  	LIMIT 0,1 	) when t11.`name` is null then '' else t11.`name` end 	) AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID LEFT JOIN zt_testrun t51 on t51.`case` = t1.id LEFT JOIN zt_testreport t61 on FIND_IN_SET(t51.task, t61.tasks)
					 WHERE 	t1.DELETED = '0'
						 AND t61.id = #{srf.webcontext.srfparentkey}
			]]>
    </sql>
    <!--数据查询[MyFavorite]-->
    <sql id="MyFavorite" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 1 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t11.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  
					 WHERE 	t1.DELETED = '0'
						 AND ( t1.id in (select t.OBJECTID from T_IBZ_FAVORITES t where t.type = 'case' and t.account = #{srf.sessioncontext.srfloginname})  AND  t1.DELETED = '0' )
			]]>
    </sql>
    <!--数据查询[NotCurTestSuite]-->
    <sql id="NotCurTestSuite" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`AUTO`, 	t1.`BRANCH`, 	t1.`COLOR`, 	t1.`DELETED`, 	t1.`FRAME`, 	t1.`FREQUENCY`, 	t1.`FROMBUG`, 	t1.`FROMCASEID`, 	t1.`FROMCASEVERSION`, 	t1.`HOWRUN`, 	t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'case' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, 	t1.`KEYWORDS`, 	t1.`LASTEDITEDBY`, 	t1.`LASTEDITEDDATE`, 	t1.`LASTRUNDATE`, 	t1.`LASTRUNNER`, 	t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) as  `LASTRUNRESULT1`, 	t1.`LIB`, 	t1.`LINKCASE`, 	t1.`MODULE`, 	t11.`NAME` AS `MODULENAME`, 	t1.`OPENEDBY`, 	t1.`OPENEDDATE`, 	t1.`ORDER`, 	t1.`PATH`, 	t1.`PRI`, 	t1.`PRODUCT`, 	t31.`NAME` AS `PRODUCTNAME`, 	( SELECT COUNT( 1 ) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, 	( SELECT COUNT( 1 ) FROM zt_testresult WHERE `case` = t1.`ID` AND caseResult IN ( 'fail', 'blocked' ) ) AS `RESULTFALICNT`, 	t1.`REVIEWEDBY`, 	t1.`REVIEWEDDATE`, 	t1.`SCRIPTEDBY`, 	t1.`SCRIPTEDDATE`, 	t1.`SCRIPTLOCATION`, 	t1.`SCRIPTSTATUS`, 	t1.`STAGE`, 	t1.`STATUS`, 	( CASE WHEN t1.storyVersion < t21.version AND t21.`status` <> 'changed' THEN 'storychange' ELSE t1.`status` END ) AS `STATUS1`, 	( SELECT COUNT( 1 ) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, 	t1.`STORY`, 	t21.`TITLE` AS `STORYNAME`, 	t1.`STORYVERSION`, 	t1.`SUBSTATUS`, 	t1.`TITLE`, 	( SELECT COUNT( 1 ) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, 	t1.`TYPE`, 	t1.`VERSION`  FROM 	`zt_case` t1 	LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID 	LEFT JOIN zt_story t21 ON t1.STORY = t21.ID 	LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID
					 WHERE 	NOT(EXISTS(SELECT * FROM zt_suitecase t41   WHERE   t1.ID = t41.`CASE`  AND  ( t41.`suite` = #{srf.webcontext.suite} ) ))
						 AND t1.`deleted` = '0'
			]]>
    </sql>
    <!--数据查询[NotCurTestTask]-->
    <sql id="NotCurTestTask" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'case' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) as  `LASTRUNRESULT1`, t1.`LIB`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  
					 WHERE 	NOT(EXISTS(SELECT * FROM zt_testrun t41   WHERE   t1.ID = t41.`CASE`  AND  ( t41.`task` = #{srf.webcontext.task} ) ))
						 AND t1.DELETED = '0'
						 AND t1.product in (select tt.product from zt_testtask t left join zt_projectproduct tt on tt.project = t.project where t.id = #{srf.webcontext.task})
			]]>
    </sql>
    <!--数据查询[NotCurTestTaskProject]-->
    <sql id="NotCurTestTaskProject" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, (select (case when COUNT(t.IBZ_FAVORITESID) > 0 then 1 else 0 end ) as ISFAVORITES from T_IBZ_FAVORITES t where t.TYPE = 'case' and t.ACCOUNT = #{srf.sessioncontext.srfloginname} and t.OBJECTID = t1.id) AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) as  `LASTRUNRESULT1`, t1.`LIB`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  
					 WHERE 	NOT(EXISTS(SELECT * FROM zt_testrun t41   WHERE   t1.ID = t41.`CASE`  AND  ( t41.`task` = #{srf.webcontext.task} ) ))
						 AND t1.DELETED = '0'
						 AND t1.product in (select tt.product from zt_testtask t left join zt_projectproduct tt on tt.project = t.project where t.id = #{srf.webcontext.task})
			]]>
    </sql>
    <!--数据查询[RePortCase]-->
    <sql id="RePortCase" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t51.`LASTRUNDATE` as LASTRUNDATE, t51.`LASTRUNNER` as LASTRUNNER, t51.`LASTRUNRESULT` as LASTRUNRESULT, (case when t51.`LASTRUNRESULT` = '' or t51.`LASTRUNRESULT` is null then 'no' else t51.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, t51.assignedTo as assignedTo, (case when t1.version > t51.version then 'casechange' else t51.`status` end) as `status1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, case when t1.`TYPE` = 'feature' then '功能测试' when t1.`TYPE` = 'performance' then '性能测试' when t1.`TYPE` = 'config' then '配置相关' when t1.`TYPE` = 'nstall' then '安装部署' when t1.`TYPE` = '	security' then '安全相关' when t1.`TYPE` = 'interface' then '接口测试' when t1.`TYPE` = 'unit' then '单元测试' when t1.`TYPE` = 'other' then '其他' end  as `TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID LEFT JOIN zt_testrun t51 on t51.`case` = t1.id LEFT JOIN zt_testreport t61 on t51.task = t61.tasks
					 WHERE 	t1.DELETED = '0'
						 AND t61.id = #{srf.webcontext.srfparentkey}
			]]>
    </sql>
    <!--数据查询[RePortCaseEntry]-->
    <sql id="RePortCaseEntry" databaseId="mysql">
		<![CDATA[ select t1.lastRunResult1,t1.RESULTCNT as RESULTCNT, t1.PRODUCT,CONCAT(ROUND(t1.RESULTCNT / t1.sss * 100, 2),'','%') as TASK from (SELECT 	t1.PRODUCT, 	t1.lastRunResult1, 	t1.RESULTCNT, 	( SELECT 	COUNT( 1 )  FROM 	zt_case ttt  LEFT JOIN zt_testrun t51 on t51.`case` = ttt.id LEFT JOIN zt_testreport t61 on t51.task = t61.tasks WHERE 	t61.id = #{srf.webcontext.srfparentkey}  	AND ttt.DELETED = '0'  	) AS sss  FROM 	( SELECT 	t1.PRODUCT, 	t1.lastRunResult1, 	count( t1.lastRunResult1 ) AS RESULTCNT  FROM 	( SELECT 	t1.`PRODUCT`, CASE 	 	WHEN t1.`TYPE` = 'feature' THEN 	'功能测试'  	WHEN t1.`TYPE` = 'performance' THEN 	'性能测试'  	WHEN t1.`TYPE` = 'config' THEN 	'配置相关'  	WHEN t1.`TYPE` = 'nstall' THEN 	'安装部署'  	WHEN t1.`TYPE` = '	security' THEN 	'安全相关'  	WHEN t1.`TYPE` = 'interface' THEN 	'接口测试'  	WHEN t1.`TYPE` = 'unit' THEN 	'单元测试'  	WHEN t1.`TYPE` = 'other' THEN 	'其他'  	END AS `lastRunResult1`  FROM 	`zt_case` t1          LEFT JOIN zt_testrun t51 on t51.`case` = t1.id         LEFT JOIN zt_testreport t61 on t51.task = t61.tasks WHERE 	t61.id = #{srf.webcontext.srfparentkey} 	AND t1.DELETED = '0'  	) t1  GROUP BY 	t1.lastRunResult1  ) t1) t1
			]]>
    </sql>
    <!--数据查询[RePortCase_Project]-->
    <sql id="RePortCase_Project" databaseId="mysql">
		<![CDATA[ SELECT DISTINCT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, case when t1.`TYPE` = 'feature' then '功能测试' when t1.`TYPE` = 'performance' then '性能测试' when t1.`TYPE` = 'config' then '配置相关' when t1.`TYPE` = 'nstall' then '安装部署' when t1.`TYPE` = '	security' then '安全相关' when t1.`TYPE` = 'interface' then '接口测试' when t1.`TYPE` = 'unit' then '单元测试' when t1.`TYPE` = 'other' then '其他' end  as `TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID LEFT JOIN zt_testrun t51 on t51.`case` = t1.id LEFT JOIN zt_testreport t61 on FIND_IN_SET(t51.task, t61.tasks)
					 WHERE 	t1.DELETED = '0'
						 AND t61.id = #{srf.webcontext.srfparentkey}
			]]>
    </sql>
    <!--数据查询[RunERRePortCase]-->
    <sql id="RunERRePortCase" databaseId="mysql">
		<![CDATA[ SELECT  t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t71.date AS `LASTRUNDATE`, t81.realname as `LASTRUNNER`, t71.caseResult AS `LASTRUNRESULT`, (case when t71.`caseResult` = '' or t71.`caseResult` is null then 'no' else t71.`caseResult` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  LEFT JOIN zt_testrun t61 on t61.`case` = t1.id  LEFT JOIN zt_testresult t71 on t61.id = t71.run AND t71.`case` = t1.id LEFT JOIN zt_user t81 on t71.lastRunner = t81.account inner join zt_testreport t91 on t61.task = t91.tasks
					 WHERE 	t1.DELETED = '0'
						 AND t91.id = #{srf.webcontext.srfparentkey} and  ( FIND_IN_SET(t1.id,t91.cases) ) and t71.date > t91.`begin` and t71.date < t91.`end`
			]]>
    </sql>
    <!--数据查询[RunERRePortCaseEntry]-->
    <sql id="RunERRePortCaseEntry" databaseId="mysql">
		<![CDATA[ select t1.lastRunResult1,t1.RESULTCNT as RESULTCNT,t1.PRODUCT, CONCAT(ROUND(t1.RESULTCNT / t1.sss * 100, 2),'','%') as TASK from (select t1.PRODUCT, 	t1.lastRunResult1, 	t1.RESULTCNT, (SELECT 	count(1) FROM 	`zt_case` t1 	LEFT JOIN zt_testrun t61 ON t61.`case` = t1.id 	LEFT JOIN zt_testresult t71 ON t61.id = t71.run  	AND t71.`case` = t1.id 	LEFT JOIN zt_user t81 ON t71.lastRunner = t81.account  WHERE 	t1.DELETED = '0'  	AND ( FIND_IN_SET( t1.id, ( SELECT tt.cases FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} ) ) )  	AND t61.task = ( SELECT tt.tasks FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} ) ) as sss from (SELECT 	t1.PRODUCT, 	t1.lastRunResult1, 	count( t1.lastRunResult1 ) AS RESULTCNT  FROM 	( SELECT 	t81.realname AS `lastRunResult1`, 	t1.`PRODUCT`  FROM 	`zt_case` t1 	LEFT JOIN zt_testrun t61 ON t61.`case` = t1.id 	LEFT JOIN zt_testresult t71 ON t61.id = t71.run  	AND t71.`case` = t1.id 	LEFT JOIN zt_user t81 ON t71.lastRunner = t81.account  WHERE 	t1.DELETED = '0'  	AND ( FIND_IN_SET( t1.id, ( SELECT tt.cases FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} ) ) )  	AND t61.task = ( SELECT tt.tasks FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} )  	) t1  GROUP BY 	t1.LASTRUNRESULT1) t1) t1
			]]>
    </sql>
    <!--数据查询[RunERRePortCase_Project]-->
    <sql id="RunERRePortCase_Project" databaseId="mysql">
		<![CDATA[ SELECT  t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t71.date AS `LASTRUNDATE`, t81.realname as `LASTRUNNER`, t71.caseResult AS `LASTRUNRESULT`, (case when t71.`caseResult` = '' or t71.`caseResult` is null then 'no' else t71.`caseResult` end) AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  LEFT JOIN zt_testrun t61 on t61.`case` = t1.id  LEFT JOIN zt_testresult t71 on t61.id = t71.run AND t71.`case` = t1.id LEFT JOIN zt_user t81 on t71.lastRunner = t81.account inner join zt_testreport t91 on FIND_IN_SET(t61.task, t91.tasks)
					 WHERE 	t1.DELETED = '0'
						 AND t91.id = #{srf.webcontext.srfparentkey} and  ( FIND_IN_SET(t1.id,t91.cases) ) and t71.date > t91.`begin` and t71.date < CONCAT(DATE_FORMAT(t91.`end`,'%Y-%m-%d'),' 23:59:59')
			]]>
    </sql>
    <!--数据查询[RunRePortCase]-->
    <sql id="RunRePortCase" databaseId="mysql">
		<![CDATA[ SELECT  t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t71.date AS `LASTRUNDATE`, t71.`LASTRUNNER`, t71.caseResult AS `LASTRUNRESULT`, case when t71.caseResult = 'n/a' then '忽略' when t71.caseResult = 'pass' then '通过' when t71.caseResult = 'fail' then '失败' when t71.caseResult = 'blocked' then '阻塞' end AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  LEFT JOIN zt_testrun t61 on t61.`case` = t1.id  LEFT JOIN zt_testresult t71 on t61.id = t71.run AND t71.`case` = t1.id inner join zt_testreport t81 on t61.task = t81.tasks
					 WHERE 	t1.DELETED = '0'
						 AND  t81.id = #{srf.webcontext.srfparentkey} and  ( FIND_IN_SET(t1.id,t81.cases) ) and t71.date > t81.`begin` and t71.date < t81.`end`
			]]>
    </sql>
    <!--数据查询[RunRePortCaseEntry]-->
    <sql id="RunRePortCaseEntry" databaseId="mysql">
		<![CDATA[ select  t1.lastRunResult1,t1.product,t1.RESULTCNT as RESULTCNT, CONCAT(ROUND(t1.RESULTCNT / t1.sss * 100, 2),'','%') as TASK from (SELECT 	t1.*, 	( SELECT 	count( 1 )  FROM 	( SELECT  CASE 	 WHEN 	t71.caseResult = 'n/a' THEN 	'忽略'  WHEN t71.caseResult = 'pass' THEN '通过'  WHEN t71.caseResult = 'fail' THEN '失败'  WHEN t71.caseResult = 'blocked' THEN '阻塞'  END AS `LASTRUNRESULT1`  FROM 	`zt_case` t1 	LEFT JOIN zt_testrun t61 ON t61.`case` = t1.id 	LEFT JOIN zt_testresult t71 ON t61.id = t71.run  	AND t71.`case` = t1.id  WHERE 	t1.DELETED = '0'  	AND ( FIND_IN_SET( t1.id, ( SELECT tt.cases FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} ) ) )  	AND t61.task = ( SELECT tt.tasks FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} )  	) tt1  	) AS sss  FROM 	( 	SELECT 		t1.LASTRUNRESULT1, t1.product, 		count( t1.LASTRUNRESULT1 ) AS RESULTCNT  	FROM 		( 		SELECT t1.product, 		CASE 				 			WHEN 				t71.caseResult = 'n/a' THEN 					'忽略'  					WHEN t71.caseResult = 'pass' THEN 					'通过'  					WHEN t71.caseResult = 'fail' THEN 					'失败'  					WHEN t71.caseResult = 'blocked' THEN 					'阻塞'  				END AS `LASTRUNRESULT1`  			FROM 				`zt_case` t1 				LEFT JOIN zt_testrun t61 ON t61.`case` = t1.id 				LEFT JOIN zt_testresult t71 ON t61.id = t71.run  				AND t71.`case` = t1.id  			WHERE 				t1.DELETED = '0'  				AND ( FIND_IN_SET( t1.id, ( SELECT tt.cases FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} ) ) )  				AND t61.task = ( SELECT tt.tasks FROM zt_testreport tt WHERE tt.id = #{srf.webcontext.srfparentkey} )  			) t1  		GROUP BY 		t1.LASTRUNRESULT1  ) t1) t1
			]]>
    </sql>
    <!--数据查询[RunRePortCase_Project]-->
    <sql id="RunRePortCase_Project" databaseId="mysql">
		<![CDATA[ SELECT  t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t71.date AS `LASTRUNDATE`, t71.`LASTRUNNER`, t71.caseResult AS `LASTRUNRESULT`, case when t71.caseResult = 'n/a' then '忽略' when t71.caseResult = 'pass' then '通过' when t71.caseResult = 'fail' then '失败' when t71.caseResult = 'blocked' then '阻塞' end AS `LASTRUNRESULT1`, t1.`LIB`, t41.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t11.`NAME` AS `MODULENAME`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRI`, t1.`PRODUCT`, t31.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN zt_module t11 ON t1.MODULE = t11.ID  LEFT JOIN zt_story t21 ON t1.STORY = t21.ID  LEFT JOIN zt_product t31 ON t1.PRODUCT = t31.ID  LEFT JOIN zt_testsuite t41 ON t1.LIB = t41.ID  LEFT JOIN zt_testrun t61 on t61.`case` = t1.id  LEFT JOIN zt_testresult t71 on t61.id = t71.run AND t71.`case` = t1.id inner join zt_testreport t81 on FIND_IN_SET(t61.task, t81.tasks)
					 WHERE 	t1.DELETED = '0'
						 AND  t81.id = #{srf.webcontext.srfparentkey} and  ( FIND_IN_SET(t1.id,t81.cases) ) and t71.date > t81.`begin` and t71.date <  CONCAT(DATE_FORMAT(t81.`end`,'%Y-%m-%d'),' 23:59:59')
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`AUTO`, t1.`BRANCH`, t1.`COLOR`, t1.`DELETED`, t1.`FRAME`, t1.`FREQUENCY`, t1.`FROMBUG`, t1.`FROMCASEID`, t1.`FROMCASEVERSION`, t1.`HOWRUN`, t1.`ID`, 0 AS `ISFAVORITES`, t1.`KEYWORDS`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`LASTRUNDATE`, t1.`LASTRUNNER`, t1.`LASTRUNRESULT`, (case when t1.`LASTRUNRESULT` = '' or t1.`LASTRUNRESULT` is null then 'no' else t1.`LASTRUNRESULT` end) AS `LASTRUNRESULT1`, t1.`LIB`, t11.`NAME` AS `LIBNAME`, t1.`LINKCASE`, t1.`MODULE`, t31.`NAME` AS `MODULENAME`, (case when t1.module = '0' then '/' else (SELECT GROUP_CONCAT( tt.NAME SEPARATOR '>' )  FROM zt_module tt WHERE FIND_IN_SET( tt.id, t31.path ) AND tt.type = 'story'  GROUP BY tt.root limit 0,1) end) AS `MODULENAME1`, t1.`OPENEDBY`, t1.`OPENEDDATE`, t1.`ORDER`, t1.`PATH`, t1.`PRECONDITION`, t1.`PRI`, t1.`PRODUCT`, t41.`NAME` AS `PRODUCTNAME`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID` ) AS `RESULTCNT`, (SELECT COUNT(1) FROM zt_testresult WHERE `case` = t1.`ID`  and caseResult in('fail','blocked') ) AS `RESULTFALICNT`, t1.`REVIEWEDBY`, t1.`REVIEWEDDATE`, t1.`SCRIPTEDBY`, t1.`SCRIPTEDDATE`, t1.`SCRIPTLOCATION`, t1.`SCRIPTSTATUS`, t1.`STAGE`, t1.`STATUS`, (case when t1.storyVersion < t21.version and t21.`status` <> 'changed' then 'storychange'  else t1.`status` end ) AS `STATUS1`, (SELECT COUNT(1) FROM zt_casestep WHERE `case` = t1.`ID` AND version = t1.`VERSION` ) AS `STEPCNT`, t1.`STORY`, t21.`TITLE` AS `STORYNAME`, t1.`STORYVERSION`, t1.`SUBSTATUS`, t1.`TITLE`, (SELECT COUNT(1) FROM zt_bug WHERE `case` = t1.`ID` ) AS `TOBUGCNT`, t1.`TYPE`, t1.`VERSION` FROM `zt_case` t1  LEFT JOIN `zt_testsuite` t11 ON t1.`LIB` = t11.`ID`  LEFT JOIN `zt_story` t21 ON t1.`STORY` = t21.`ID`  LEFT JOIN `zt_module` t31 ON t1.`MODULE` = t31.`ID`  LEFT JOIN `zt_product` t41 ON t1.`PRODUCT` = t41.`ID`  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>


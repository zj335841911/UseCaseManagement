<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.DocMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="DocResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ACL`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`COLLECTOR`, t1.`DELETED`, 'doc' AS `DOCQTYPE`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`USERS`, t1.`VERSION`, t1.`VIEWS` FROM `zt_doc` t1  LEFT JOIN `zt_product` t11 ON t1.`PRODUCT` = t11.`ID`  LEFT JOIN `zt_project` t21 ON t1.`PROJECT` = t21.`ID`  LEFT JOIN `zt_doclib` t31 ON t1.`LIB` = t31.`ID`  LEFT JOIN `zt_module` t41 ON t1.`MODULE` = t41.`ID`  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="DocResultMap" type="cn.ibizlab.pms.core.zentao.domain.Doc" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="lib" column="lib" />
		<result property="project" column="project" />
		<result property="product" column="product" />
		<result property="module" column="module" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztDoclib" javaType="cn.ibizlab.pms.core.zentao.domain.DocLib" column="lib" select="cn.ibizlab.pms.core.zentao.mapper.DocLibMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztModule" javaType="cn.ibizlab.pms.core.zentao.domain.Module" column="module" select="cn.ibizlab.pms.core.zentao.mapper.ModuleMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztProduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztProject" javaType="cn.ibizlab.pms.core.zentao.domain.Project" column="project" select="cn.ibizlab.pms.core.zentao.mapper.ProjectMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_DOC_ZT_DOCLIB_LIB] -->
	 <select id="selectByLib" resultMap="DocResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  lib=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_DOC_ZT_MODULE_MODULE] -->
	 <select id="selectByModule" resultMap="DocResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  module=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_DOC_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="DocResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>
	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_DOC_ZT_PROJECT_PROJECT] -->
	 <select id="selectByProject" resultMap="DocResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  project=#{id}
     </select>

    <!--数据集合[ChildDocLibDoc]-->
	 <select id="searchChildDocLibDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="ChildDocLibDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[DocLibAndDoc]-->
	 <select id="searchDocLibAndDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="DocLibAndDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[DocLibDoc]-->
	 <select id="searchDocLibDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="DocLibDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[DocModuleDoc]-->
	 <select id="searchDocModuleDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="DocModuleDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[DocStatus]-->
	 <select id="searchDocStatus"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="DocStatus" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[ModuleDocChild]-->
	 <select id="searchModuleDocChild"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="ModuleDocChild" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[MyFavourite]-->
	 <select id="searchMyFavourite"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="MyFavourite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[MyFavouritesOnlyDoc]-->
	 <select id="searchMyFavouritesOnlyDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="MyFavouritesOnlyDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[NotRootDoc]-->
	 <select id="searchNotRootDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="NotRootDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[RootDoc]-->
	 <select id="searchRootDoc"  parameterType="cn.ibizlab.pms.core.zentao.filter.DocSearchContext"  resultMap="DocResultMap">
         select t1.* from (
                <include refid="RootDoc" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[ChildDocLibDoc]-->
    <sql id="ChildDocLibDoc" databaseId="mysql">
		<![CDATA[ select t1.* from (select null as `ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`,  null as `ADDEDBY`, null as `ADDEDDATE`, '0' as `DELETED`, null as `EDITEDBY`, null as `EDITEDDATE`, null as  `GROUPS`, t1.`ID`, ''`KEYWORDS`, #{srf.datacontext.srfparentkey} as `LIB`, '' AS `LIBNAME`, 0 as `MODULE`, '' AS `MODULENAME`, 0 as `PRODUCT`, '' AS `PRODUCTNAME`, 0 as `PROJECT`, '' AS `PROJECTNAME`, t1.`name` as `TITLE`, 'text' as `TYPE`, 1 as `VERSION`, '' as `VIEWS`,'module' as DOCQTYPE from zt_module t1 where t1.deleted = '0' and t1.type = 'doc' and t1.root = #{srf.datacontext.srfparentkey} and t1.parent = #{srf.datacontext.parent} UNION SELECT t1.`ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`,  t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS`, 'doc' as DOCQTYPE FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID ) t1
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, 'doc' AS `DOCQTYPE`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS` FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[DocLibAndDoc]-->
    <sql id="DocLibAndDoc" databaseId="mysql">
		<![CDATA[ select t1.* from (select null as `ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, null as `ADDEDBY`, null as `ADDEDDATE`, '0' as `DELETED`, null as `EDITEDBY`, null as `EDITEDDATE`, null as  `GROUPS`, t1.`ID`, ''`KEYWORDS`, '0' as `LIB`, '' AS `LIBNAME`, (case when #{srf.datacontext.srfparentkey} is null then '0' else  #{srf.datacontext.srfparentkey} end )  as `MODULE`, '' AS `MODULENAME`, t2.product as `PRODUCT`, '' AS `PRODUCTNAME`, 0 as `PROJECT`, '' AS `PROJECTNAME`, t1.`name` as `TITLE`, 'module' as `TYPE`, 1 as `VERSION`, (select count(1) from zt_doc t where t.deleted = '0' and t.module = t1.id) + (select count(1) from zt_module t where t.deleted = '0' and t.type = 'doc' and t.root = t1.root and t.parent = t1.id) as doccnt, '' as `VIEWS`, 'module' as DOCQTYPE from zt_module t1  LEFT JOIN zt_doclib t2 on t2.id = t1.root where t1.deleted = '0' and t1.type = 'doc'  and t1.parent =  (case when #{srf.datacontext.srfparentkey} is null then '0' else  #{srf.datacontext.srfparentkey} end ) UNION SELECT t1.`ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, 0 as doccnt, t1.`VIEWS`, 'doc' as DOCQTYPE FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID ) t1
					 WHERE 	t1.DELETED = '0'
						 AND t1.module = (case when #{srf.datacontext.srfparentkey} is null then '0' else  #{srf.datacontext.srfparentkey} end ) 
			]]>
    </sql>
    <!--数据查询[DocLibDoc]-->
    <sql id="DocLibDoc" databaseId="mysql">
		<![CDATA[ select t1.* from (select null as `ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, null as `ADDEDBY`, null as `ADDEDDATE`, '0' as `DELETED`, null as `EDITEDBY`, null as `EDITEDDATE`, null as  `GROUPS`, t1.`ID`, ''`KEYWORDS`, #{srf.datacontext.srfroot} as `LIB`, '' AS `LIBNAME`, (case when #{srf.datacontext.parent} is null then '0' else  #{srf.datacontext.parent} end )  as `MODULE`, '' AS `MODULENAME`, 0 as `PRODUCT`, '' AS `PRODUCTNAME`, 0 as `PROJECT`, '' AS `PROJECTNAME`, t1.`name` as `TITLE`, 'text' as `TYPE`, 1 as `VERSION`, '' as `VIEWS`,'module' as DOCQTYPE from zt_module t1 where t1.deleted = '0' and t1.type = 'doc' and t1.root = #{srf.datacontext.srfroot} and t1.parent =  (case when #{srf.datacontext.parent} is null then '0' else  #{srf.datacontext.parent} end ) UNION SELECT t1.`ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS`, 'doc' as DOCQTYPE FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID ) t1
					 WHERE 	t1.DELETED = '0'
						 AND t1.module = (case when #{srf.datacontext.parent} is null then '0' else  #{srf.datacontext.parent} end ) 
			]]>
    </sql>
    <!--数据查询[DocModuleDoc]-->
    <sql id="DocModuleDoc" databaseId="mysql">
		<![CDATA[ select t1.* from (select null as `ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`,  null as `ADDEDBY`, null as `ADDEDDATE`, '0' as `DELETED`, null as `EDITEDBY`, null as `EDITEDDATE`, null as  `GROUPS`, t1.`ID`, ''`KEYWORDS`, #{srf.datacontext.lib} as `LIB`, '' AS `LIBNAME`, #{srf.datacontext.id} as `MODULE`, '' AS `MODULENAME`, 0 as `PRODUCT`, '' AS `PRODUCTNAME`, 0 as `PROJECT`, '' AS `PROJECTNAME`, t1.`name` as `TITLE`, 'text' as `TYPE`, 1 as `VERSION`, '' as `VIEWS`,'module' as DOCQTYPE from zt_module t1 where t1.deleted = '0' and t1.type = 'doc' and t1.root = #{srf.datacontext.lib} and t1.parent = #{srf.datacontext.id} UNION SELECT t1.`ACL`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`,  t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS`, 'doc' as DOCQTYPE FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID ) t1
					 WHERE 	t1.DELETED = '0'
						 AND t1.module = #{srf.datacontext.id}
			]]>
    </sql>
    <!--数据查询[DocStatus]-->
    <sql id="DocStatus" databaseId="mysql">
		<![CDATA[ select  count(1) as `ALLDOCCNT`, (select count(1) from zt_doc where TO_DAYS(DATE_FORMAT(NOW(),'%Y-%m-%d')) - TO_DAYS(DATE_FORMAT(editedDate,'%Y-%m-%d')) < 5 and deleted = '0') as `RECENTUPDATECNT`, (select count(1) from zt_doc where DATE_FORMAT(NOW(),'%Y-%m-%d') = DATE_FORMAT(editedDate,'%Y-%m-%d') and deleted = '0') as `TODAYUPDATECNT`, (select count(1) from zt_doc where TO_DAYS(DATE_FORMAT(NOW(),'%Y-%m-%d')) - TO_DAYS(DATE_FORMAT(addedDate,'%Y-%m-%d')) < 5 and deleted = '0') as `RECENTADDCNT`, (select count(1) from zt_doc where addedBy = #{srf.sessioncontext.srfloginname} and deleted = '0') as `MYDOCCNT`, (select count(1) from zt_doc where FIND_IN_SET(#{srf.sessioncontext.srfloginname},collector) > 0) as `MYFAVOURITECNT` from zt_doc where deleted = '0'
			]]>
    </sql>
    <!--数据查询[ModuleDocChild]-->
    <sql id="ModuleDocChild" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, 'doc' AS `DOCQTYPE`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS` FROM `zt_doc` t1  LEFT JOIN `zt_product` t11 ON t1.`PRODUCT` = t11.`ID`  LEFT JOIN `zt_project` t21 ON t1.`PROJECT` = t21.`ID`  LEFT JOIN `zt_doclib` t31 ON t1.`LIB` = t31.`ID`  LEFT JOIN `zt_module` t41 ON t1.`MODULE` = t41.`ID`  
					 WHERE 	t1.DELETED = '0'
						 AND ( t1.`MODULE` = #{srf.webcontext.srfparentkey} )
			]]>
    </sql>
    <!--数据查询[MyFavourite]-->
    <sql id="MyFavourite" databaseId="mysql">
		<![CDATA[ SELECT 	*  FROM 	( 	SELECT 		t1.id, 		t1.`name` AS `title`, 		NULL AS `addedBy`, 		NULL AS `addedDate`, 		NULL AS `editedBy`, 		NULL AS `editedDate`, 		1 AS `ISFAVOURITES`,  		'doclib' as DOCQTYPE 	FROM 		zt_doclib t1  	WHERE 		t1.collector LIKE CONCAT_WS( '', '%,', #{srf.sessioncontext.srfloginname}, '%,' )  		AND t1.deleted = '0' UNION 	SELECT 		t2.id, 		t2.`name` AS `title`, 		NULL AS `addedBy`, 		NULL AS `addedDate`, 		NULL AS `editedBy`, 		NULL AS `editedDate`, 		1 AS `ISFAVOURITES`,  		'module' as DOCQTYPE  	FROM 		zt_module t2  	WHERE 		t2.collector LIKE CONCAT_WS( '', '%,', #{srf.sessioncontext.srfloginname}, '%,' )  		AND t2.deleted = '0' UNION 	SELECT 		t3.id, 		t3.title AS `title`, 		t3.addedBy, 		t3.addedDate, 		t3.editedBy, 		t3.editedDate, 		1 AS `ISFAVOURITES`,  		'doc' as DOCQTYPE  	FROM 		zt_doc t3  	WHERE 		t3.collector LIKE CONCAT_WS( '', '%,', #{srf.sessioncontext.srfloginname}, '%,' )  	AND t3.deleted = '0'  	) t1
			]]>
    </sql>
    <!--数据查询[MyFavouritesOnlyDoc]-->
    <sql id="MyFavouritesOnlyDoc" databaseId="mysql">
		<![CDATA[ SELECT 	t1.`ACL`, 	t1.`ADDEDBY`, 	t1.`ADDEDDATE`, 	t1.`DELETED`, 	'doc' AS `DOCQTYPE`, 	t1.`EDITEDBY`, 	t1.`EDITEDDATE`, 	t1.`GROUPS`, 	t1.`ID`, 	1 AS `ISFAVOURITES`, 	t1.`KEYWORDS`, 	t1.`LIB`, 	t1.`MODULE`, 	t1.`PRODUCT`, 	t1.`PROJECT`, 	t1.`TITLE`, 	t1.`TYPE`, 	t1.`VERSION`, 	t1.`VIEWS`  FROM 	`zt_doc` t1
					 WHERE 	t1.deleted = '0'
						 AND FIND_IN_SET(#{srf.sessioncontext.srfloginname}, t1.collector ) > 0
			]]>
    </sql>
    <!--数据查询[NotRootDoc]-->
    <sql id="NotRootDoc" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, 'doc' AS `DOCQTYPE`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`,  t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS` FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID  
					 WHERE 	t1.DELETED = '0'
						 AND t1.module = #{srf.datacontext.srfparentkey}
			]]>
    </sql>
    <!--数据查询[RootDoc]-->
    <sql id="RootDoc" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`DELETED`, 'doc' AS `DOCQTYPE`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t21.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t11.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`VERSION`, t1.`VIEWS` FROM `zt_doc` t1  LEFT JOIN zt_project t11 ON t1.PROJECT = t11.ID  LEFT JOIN zt_product t21 ON t1.PRODUCT = t21.ID  LEFT JOIN zt_doclib t31 ON t1.LIB = t31.ID  LEFT JOIN zt_module t41 ON t1.MODULE = t41.ID  
					 WHERE 	t1.DELETED = '0'
						 AND t1.module = '0'
						 AND t1.lib = #{srf.datacontext.srfparentkey}
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ACL`, t1.`ADDEDBY`, t1.`ADDEDDATE`, t1.`COLLECTOR`, t1.`DELETED`, 'doc' AS `DOCQTYPE`, t1.`EDITEDBY`, t1.`EDITEDDATE`, t1.`GROUPS`, t1.`ID`, ( CASE WHEN FIND_IN_SET( #{srf.sessioncontext.srfloginname}, t1.collector ) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES`, t1.`KEYWORDS`, t1.`LIB`, t31.`NAME` AS `LIBNAME`, t1.`MODULE`, t41.`NAME` AS `MODULENAME`, t1.`PRODUCT`, t11.`NAME` AS `PRODUCTNAME`, t1.`PROJECT`, t21.`NAME` AS `PROJECTNAME`, t1.`TITLE`, t1.`TYPE`, t1.`USERS`, t1.`VERSION`, t1.`VIEWS` FROM `zt_doc` t1  LEFT JOIN `zt_product` t11 ON t1.`PRODUCT` = t11.`ID`  LEFT JOIN `zt_project` t21 ON t1.`PROJECT` = t21.`ID`  LEFT JOIN `zt_doclib` t31 ON t1.`LIB` = t31.`ID`  LEFT JOIN `zt_module` t41 ON t1.`MODULE` = t41.`ID`  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>


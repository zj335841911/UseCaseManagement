<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.pms.core.zentao.mapper.TestSuiteMapper">

    <!--该方法用于重写mybatis中selectById方法，以实现查询逻辑属性-->
	<select id="selectById"  resultMap="TestSuiteResultMap" databaseId="mysql">
        <![CDATA[select t1.* from (SELECT t1.`ADDEDBY`, t1.`ADDEDDATE`, 0 AS `CASECNT`, t1.`DELETED`, t1.`DESC`, t1.`ID`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`NAME`, t1.`PRODUCT`, t1.`TYPE` FROM `zt_testsuite` t1  ) t1 where id=#{id}]]>
    </select>

    <!--通过mybatis将查询结果注入到entity中,通过配置autoMapping="true"由mybatis自动处理映射关系 -->
    <resultMap id="TestSuiteResultMap" type="cn.ibizlab.pms.core.zentao.domain.TestSuite" autoMapping="true">
		<id property="id" column="id" /><!--主键字段映射-->
		<result property="product" column="product" />


		<!--通过mybatis自动注入关系属性[主实体]，fetchType="lazy"为懒加载配置 -->
		<association property="ztproduct" javaType="cn.ibizlab.pms.core.zentao.domain.Product" column="product" select="cn.ibizlab.pms.core.zentao.mapper.ProductMapper.selectById" fetchType="lazy"></association>
    </resultMap>

	<!--关系实体暴露select方法供主实体通过外键查询关系实体数据[实体关系名称:DER1N_ZT_TESTSUITE_ZT_PRODUCT_PRODUCT] -->
	 <select id="selectByProduct" resultMap="TestSuiteResultMap">
         select t1.* from (
                <include refid="Default" />
			 ) t1
			 where  product=#{id}
     </select>

    <!--数据集合[Default]-->
	 <select id="searchDefault"  parameterType="cn.ibizlab.pms.core.zentao.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
         select t1.* from (
                <include refid="Default" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据集合[PublicTestSuite]-->
	 <select id="searchPublicTestSuite"  parameterType="cn.ibizlab.pms.core.zentao.filter.TestSuiteSearchContext"  resultMap="TestSuiteResultMap">
         select t1.* from (
                <include refid="PublicTestSuite" />
         )t1
         <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
         <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
     </select>

    <!--数据查询[Default]-->
    <sql id="Default" databaseId="mysql">
		<![CDATA[ SELECT t1.`ADDEDBY`, t1.`ADDEDDATE`, 0 AS `CASECNT`, t1.`DELETED`, t1.`ID`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`NAME`, t1.`PRODUCT`, t1.`TYPE` FROM `zt_testsuite` t1  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
    <!--数据查询[PublicTestSuite]-->
    <sql id="PublicTestSuite" databaseId="mysql">
		<![CDATA[ SELECT t1.`ADDEDBY`, t1.`ADDEDDATE`, 0 AS `CASECNT`, t1.`DELETED`, t1.`ID`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`NAME`, t1.`PRODUCT`, t1.`TYPE` FROM `zt_testsuite` t1  
					 WHERE 	t1.DELETED = '0'
						 AND ( ( t1.`TYPE` = 'public'  OR  ( t1.`TYPE` = 'private'  AND  t1.`ADDEDBY` =  #{srf.sessioncontext.srfloginname} ) )  AND  t1.`PRODUCT` = #{srf.webcontext.srfparentkey} )
			]]>
    </sql>
    <!--数据查询[View]-->
    <sql id="View" databaseId="mysql">
		<![CDATA[ SELECT t1.`ADDEDBY`, t1.`ADDEDDATE`, 0 AS `CASECNT`, t1.`DELETED`, t1.`DESC`, t1.`ID`, t1.`LASTEDITEDBY`, t1.`LASTEDITEDDATE`, t1.`NAME`, t1.`PRODUCT`, t1.`TYPE` FROM `zt_testsuite` t1  
					 WHERE 	t1.DELETED = '0'
			]]>
    </sql>
</mapper>


package cn.ibizlab.pms.ibiz.logic.doclibmodulelogic.curuserisf;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONObject;
import org.springframework.util.StringUtils;
import org.springframework.util.ObjectUtils;
import cn.ibizlab.pms.util.errors.BadRequestAlertException;
global cn.ibizlab.pms.core.ibiz.domain.DocLibModule doclibmodulecuruserisfdefault;
global cn.ibizlab.pms.core.ibiz.service.IDocLibModuleService iBzSysDoclibmoduleDefaultService;
global cn.ibizlab.pms.util.security.AuthenticationUser curuser;


no-loop

//逻辑处理节点[设置查询类型]
rule "rawsqlcall2"
ruleflow-group "doclibmodulecuruserisfrawsqlcall2"
    when
    then
    Map param = null;
    String strSql="select 'module' as `DOCQTYPE` from dual";
    java.util.List<JSONObject> entities=iBzSysDoclibmoduleDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            doclibmodulecuruserisfdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(doclibmodulecuruserisfdefault);//更新fact中变量值
    end

//逻辑处理节点[查询是否收藏]
rule "rawsqlcall1"
ruleflow-group "doclibmodulecuruserisfrawsqlcall1"
    when
    then
    Map param =new HashMap();
    param.put("param0",curuser.getSessionParams().get("srfloginname"));
    param.put("param1",doclibmodulecuruserisfdefault.get("collector"));
    String strSql="select ( CASE WHEN FIND_IN_SET( #{et.param0}, #{et.param1}) > 0 THEN 1 ELSE 0 END ) AS `ISFAVOURITES` from dual";
    java.util.List<JSONObject> entities=iBzSysDoclibmoduleDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            doclibmodulecuruserisfdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(doclibmodulecuruserisfdefault);//更新fact中变量值
    end

//逻辑处理节点[开始]
rule "begin"
ruleflow-group "doclibmodulecuruserisfbegin"
    when
    then
    end


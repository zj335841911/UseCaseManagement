package cn.ibizlab.pms.ibiz.logic.ibzmyterritorylogic.myterritorycount;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONObject;
import org.springframework.util.StringUtils;
import org.springframework.util.ObjectUtils;
import cn.ibizlab.pms.util.errors.BadRequestAlertException;
global cn.ibizlab.pms.core.ibiz.domain.IbzMyTerritory ibzmyterritorymyterritorycountdefault;
global cn.ibizlab.pms.core.ibiz.service.IIbzMyTerritoryService iBzSysIbzmyterritoryDefaultService;
global cn.ibizlab.pms.util.security.AuthenticationUser curuser;


no-loop

//逻辑处理节点[获取我的需求数]
rule "rawsqlcall1"
ruleflow-group "ibzmyterritorymyterritorycountrawsqlcall1"
    when
    then
    Map param =new HashMap();
    param.put("param0",curuser.getSessionParams().get("srfloginname"));
    String strSql="select count(t1.id) AS MYSTORYS from zt_story t1 where t1.deleted = '0' and t1.assignedTo = #{et.param0}";
    java.util.List<JSONObject> entities=iBzSysIbzmyterritoryDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            ibzmyterritorymyterritorycountdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(ibzmyterritorymyterritorycountdefault);//更新fact中变量值
    end

//逻辑处理节点[我的待办数]
rule "rawsqlcall4"
ruleflow-group "ibzmyterritorymyterritorycountrawsqlcall4"
    when
    then
    Map param =new HashMap();
    param.put("param0",curuser.getSessionParams().get("srfloginname"));
    String strSql="select count(t1.id) as MYTODOCNT from zt_todo t1 where t1.cycle = '0' and t1.account = #{et.param0}";
    java.util.List<JSONObject> entities=iBzSysIbzmyterritoryDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            ibzmyterritorymyterritorycountdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(ibzmyterritorymyterritorycountdefault);//更新fact中变量值
    end

//逻辑处理节点[开始]
rule "begin"
ruleflow-group "ibzmyterritorymyterritorycountbegin"
    when
    then
    end

//逻辑处理节点[获取我的bug数]
rule "rawsqlcall2"
ruleflow-group "ibzmyterritorymyterritorycountrawsqlcall2"
    when
    then
    Map param =new HashMap();
    param.put("param0",curuser.getSessionParams().get("srfloginname"));
    String strSql="select count(t1.id) AS MYBUGS from zt_bug t1 where t1.deleted = '0' and t1.assignedTo = #{et.param0}";
    java.util.List<JSONObject> entities=iBzSysIbzmyterritoryDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            ibzmyterritorymyterritorycountdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(ibzmyterritorymyterritorycountdefault);//更新fact中变量值
    end

//逻辑处理节点[获取我的bug数]
rule "rawsqlcall3"
ruleflow-group "ibzmyterritorymyterritorycountrawsqlcall3"
    when
    then
    Map param =new HashMap();
    param.put("param0",curuser.getSessionParams().get("srfloginname"));
    String strSql="select count(t1.id) AS MYTASKS from zt_task t1 where t1.deleted = '0' and t1.assignedTo = #{et.param0}";
    java.util.List<JSONObject> entities=iBzSysIbzmyterritoryDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            ibzmyterritorymyterritorycountdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(ibzmyterritorymyterritorycountdefault);//更新fact中变量值
    end


package cn.ibizlab.pms.ibiz.logic.projectstatslogic.projectqualitysum;
import java.util.Map;
import java.util.HashMap;
import com.alibaba.fastjson.JSONObject;
import org.springframework.util.StringUtils;
import org.springframework.util.ObjectUtils;
import cn.ibizlab.pms.util.errors.BadRequestAlertException;
global cn.ibizlab.pms.core.ibiz.domain.ProjectStats projectstatsprojectqualitysumdefault;
global cn.ibizlab.pms.core.ibiz.service.IProjectStatsService iBzSysProjectstatsDefaultService;
global cn.ibizlab.pms.util.security.AuthenticationUser curuser;


no-loop

//逻辑处理节点[获取聚合数]
rule "rawsqlcall1"
ruleflow-group "projectstatsprojectqualitysumrawsqlcall1"
    when
    then
    Map param = null;
    String strSql="select sum(t1.bugcnt) as bugcnt, sum(t1.completetaskcnt) as completetaskcnt, sum(t1.completestorycnt) as completestorycnt, sum(t1.storycnt) as storycnt, sum(t1.FINISHBUGCNT) as FINISHBUGCNT, sum(t1.taskcnt) as taskcnt, sum(t1.bugstory) as bugstory, sum(t1.bugtask) as bugtask, sum(t1.IMPORTANTBUGCNT) as IMPORTANTBUGCNT, CONCAT(round(IFNULL((sum(t1.IMPORTANTBUGCNT)/sum(t1.bugcnt)),0),2)*100,'%')  as SERIOUSBUGPROPORTION from (SELECT t1.bugcnt,t1.completetaskcnt,t1.completestorycnt,t1.name,t1.storycnt,t1.FINISHBUGCNT,t1.taskcnt,t1.bugstory,t1.bugtask,IFNULL(t4.IMPORTANTBUGCNT,0) as IMPORTANTBUGCNT ,CONCAT(round(IFNULL((IMPORTANTBUGCNT/t1.bugcnt),0),2)*100,'%')  as SERIOUSBUGPROPORTION from ( SELECT 	t1.*, 	IFNULL( t3.bugtask, 0 ) AS bugtask  FROM 	( SELECT 	t1.*, 	IFNULL( t22.bugstory, 0 ) AS bugstory  FROM 	( SELECT 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND DELETED = '0' ) AS `BUGCNT`, 	t1.`DELETED`, 	t1.`END`, 	( SELECT COUNT( 1 ) FROM ZT_BUG WHERE PROJECT = t1.`ID` AND `STATUS` <> 'active' AND DELETED = '0' ) AS `FINISHBUGCNT`, 	(SELECT count(1) from zt_task where PROJECT = t1.`ID` AND `STATUS`='done' AND DELETED = '0')as completetaskcnt, 	(SELECT count( 1 ) FROM (SELECT t1.project,t1.story from zt_projectstory t1 left join zt_story t2 on t1.story = t2.id where t2.stage in ('verified','released','closed') and t2.deleted='0' )t2 WHERE t1.id = t2.project) as completestorycnt, 	t1.`ID`, 	t1.`NAME`, 	t1.`STATUS`, 	( SELECT 	COUNT( 1 )  FROM 	ZT_STORY 	LEFT JOIN ZT_PROJECTSTORY ON ZT_STORY.ID = ZT_PROJECTSTORY.STORY  WHERE 	PROJECT = t1.`ID`  	AND DELETED = '0'  	) AS `STORYCNT`, 	( SELECT COUNT( 1 ) FROM ZT_TASK WHERE PROJECT = t1.`ID` AND DELETED = '0' ) AS `TASKCNT`  FROM 	`zt_project` t1 	LEFT JOIN t_ibz_top t2 ON t1.id = t2.OBJECTID  	AND t2.type = 'project'  	AND t2.ACCOUNT = 'csd123_123'  WHERE 	t1.DELETED = '0'  	AND ( 	( 	t1.acl = 'private'  	AND t1.id IN ( SELECT t3.root FROM zt_team t3 WHERE t3.account = 'csd123_123' AND t3.type = 'project' )  	)  	OR t1.acl = 'open'  	)  	) t1 	LEFT JOIN ( SELECT 	t1.project, 	count( 1 ) AS bugstory  FROM 	( SELECT 	t1.project, 	t1.story, 	t2.title  FROM 	zt_bug t1 	LEFT JOIN zt_story t2 ON t1.story = t2.id 	LEFT JOIN zt_project t22 ON t1.project = t22.id  WHERE 	t1.deleted = '0'  	AND t1.project <> '0'  	AND t1.story <> '0'  	AND t22.deleted = '0'  	) t1  GROUP BY 	t1.project  	) t22 ON t1.id = t22.project  	) t1 	LEFT JOIN ( SELECT 	t1.project, 	count( 1 ) AS bugtask  FROM 	( SELECT 	t1.project, 	t1.task, 	t1.title, 	t2.NAME  FROM 	zt_bug t1 	LEFT JOIN zt_task t2 ON t1.task = t2.id 	LEFT JOIN zt_project t22 ON t1.project = t22.id  WHERE 	t1.deleted = '0'  	AND t1.project <> '0'  	AND t1.task <> '0'  	AND t22.deleted = '0'  	) t1  GROUP BY 	t1.project  	) t3 ON t1.id = t3.project 	)t1 Left join (SELECT t1.project, count(1) as IMPORTANTBUGCNT from zt_bug t1 where t1.severity <=3 and t1.deleted='0' and t1.project <> '0' GROUP BY t1.project)t4 on t1.id=t4.project) t1";
    java.util.List<JSONObject> entities=iBzSysProjectstatsDefaultService.select(strSql,param);//SQL调用
    if(entities.size()>0 && !ObjectUtils.isEmpty(entities.get(0))){
        JSONObject entity=entities.get(0);
        for (Map.Entry entry : entity.entrySet()) {
            projectstatsprojectqualitysumdefault.set(String.valueOf(entry.getKey()),entry.getValue());
        }
    }
    update(projectstatsprojectqualitysumdefault);//更新fact中变量值
    end

//逻辑处理节点[开始]
rule "begin"
ruleflow-group "projectstatsprojectqualitysumbegin"
    when
    then
    end

